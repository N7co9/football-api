<?php

namespace Api;

use App\Controller\HomeController;
use App\Core\Container;
use App\Core\DependencyProvider;
use App\Model\DTO\UserDTO;
use App\Model\SQL\SqlConnector;
use App\Model\UserEntityManager;
use App\Model\UserMapper;
use PHPUnit\Framework\TestCase;


class HomeControllerTest extends TestCase
{
    public UserEntityManager $userEntityManager;
    protected function setUp(): void
    {
        $containerBuilder = new Container();
        $dependencyProvider = new DependencyProvider();
        $dependencyProvider->provide($containerBuilder);

        $this->container = $containerBuilder;
        $this->construct = new HomeController($this->container);

        $this->userEntityManager = new UserEntityManager(new UserMapper());

        $user = new UserDTO();
        $user->email = 'TEST@TEST.com';
        $this->userEntityManager->saveCredentials($user);

        $_SESSION['mail'] = $user->email;

        parent::setUp();
    }

    public function testDataConstruct(): void
    {
        $output = $this->construct->dataConstruct();


        self::assertSame('home.twig', $output->getTpl());
        self::assertSame('BSA', $output->getParameters()['competitions'][0]->competitionCode);
        self::assertArrayHasKey('competitions', $output->getParameters());
        self::assertArrayHasKey('user', $output->getParameters());
    }

    protected function tearDown(): void
    {
        $connector = new SqlConnector();
        $connector->executeDeleteQuery("DELETE FROM user_favorites;", []);
        $connector->executeDeleteQuery("DELETE FROM users;", []);
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}